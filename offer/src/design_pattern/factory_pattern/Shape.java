package design_pattern.factory_pattern;

/**
 * 工厂模式
 */

/**
 * 意图：定义一个创建对象的接口，让其子类自己决定实例化哪一个工厂类，工厂模式使其创建过程延迟到子类镜像
 * 主要解决:主要解决接口选择的问题
 * 何时使用：我们明确地计划不空调配件下创建不同实例时
 * 如何解决：让其子类实现工厂接口，返回的也是一个抽象产品
 * 关键代码：创建过程在其子类执行
 * 应用实例：1您需要一辆车，可以直接从工厂里面提货，而不用去管这辆汽车是怎么做出来的，以及这个汽车里面的具体实现
 * 2.hibenate换数据库只需换方言和驱动就可以
 *优点：一个调用者想创建一个对象，只要知道其名称就可以了，扩展性高，如果想增加一个产品，只要扩展一个工厂类就可以
 * 屏蔽产品的具体实现，调用者只关心产品的接口
 * 缺点 每次增加一个产品都需要增加一个具体类和对象实现工厂，使得系统类的个数成倍增加，在一定程度上增加了系统的复杂度
 * 同时也增加了系统具体实现，调用者只关心产品的接口
 * 使用场景：
 */
//创建一个接口
public interface Shape {
    void draw();
}
